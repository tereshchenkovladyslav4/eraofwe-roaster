// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer: 1rem !default;
$spacers: () !default;
$spacers: map-merge(
    (
        0: 0,
        z5: (
            $spacer * 0.125,
        ),
        1: (
            $spacer * 0.25,
        ),
        2: (
            $spacer * 0.5,
        ),
        25: (
            $spacer * 0.75,
        ),
        3: $spacer,
        35: (
            $spacer * 1.75,
        ),
        4: (
            $spacer * 1.5,
        ),
        45: (
            $spacer * 2,
        ),
        475: (
            $spacer * 2.5,
        ),
        5: (
            $spacer * 3,
        ),
    ),
    $spacers
);

@import 'node_modules/bootstrap/scss/bootstrap';

// Cutomize gutter
$gutters: (
    8: 8px,
    12: 12px,
    16: 16px,
    20: 20px,
    24: 24px,
    26: 26px,
);

// Custom font size
$font-sizes: (
    8: 8px,
    10: 10px,
    12: 12px,
    14: 14px,
    16: 16px,
    18: 18px,
    20: 20px,
    22: 22px,
    24: 24px,
    26: 26px,
    28: 28px,
    30: 30px,
    32: 32px,
    40: 40px,
);

// Custom font size
$font-weights: (
    100: 100,
    200: 200,
    300: 300,
    350: 350,
    400: 400,
    500: 500,
    600: 600,
    700: 700,
    800: 800,
    thin: 100,
    extra-light: 200,
    light: 300,
    semi-light: 350,
    normal: 400,
    medium: 500,
    semi-bold: 600,
    bold: 700,
);

// line-height
$line-heights: (
    1: 1,
    13: 1.3,
    15: 1.5,
    18: 1.8,
    normal: normal,
);

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
        @each $size, $value in $gutters {
            .row.gutter#{$infix}-#{$size} {
                margin-right: -$value / 2;
                margin-left: -$value / 2;

                > .col,
                > [class*='col-'] {
                    padding-right: $value / 2;
                    padding-left: $value / 2;
                }
            }
            .row.v-gutter#{$infix}-#{$size} {
                margin-top: -$value / 2;
                margin-bottom: -$value / 2;

                > .col,
                > [class*='col-'] {
                    padding-top: $value / 2;
                    padding-bottom: $value / 2;
                }
            }
        }
        @each $size, $value in $font-sizes {
            .fnt#{$infix}-#{$size} {
                font-size: $value !important;
                line-height: normal;
            }
        }
        @each $size, $value in $font-weights {
            .fnt#{$infix}-#{$size} {
                font-weight: $value !important;
            }
        }
        @each $size, $value in $line-heights {
            .lh#{$infix}-#{$size} {
                line-height: $value !important;
            }
        }
    }
}
